/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'BUMER' at '23.02.18 15:21' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */
 
buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'parser'
}

repositories {
    mavenCentral()
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-web:1.5.10.RELEASE') { 
		//exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	//}
	compile (group: 'org.springframework.boot', name: 'spring-boot-starter') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compile (group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	
	compile 'mysql:mysql-connector-java'
	
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
	
    testCompile 'junit:junit:4.12'
	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	testCompile group: 'org.exparity', name: 'hamcrest-date', version: '2.0.4'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

//jar {
    //manifest {
      //  attributes 'Main-Class': 'com.ef.Parser'
    //}
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}

//task fatJar(type: Jar) {
//	manifest {
//        attributes 'Main-Class': 'com.ef.Parser'
//    }
//    baseName = 'parser'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}


//bootRepackage {
	//excludeDevtools = false
    //mainClass = 'com.ef.Parser'
//}

//springBoot {
   //mainClass = 'com.ef.Parser'
   //executable=true
	//layout = 'MODULE'
//}
